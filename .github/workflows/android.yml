name: Android CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Environment variables for signing the app
      SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      ANDROID_SDK_ROOT: /opt/android-sdk

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('**/build.gradle', '**/settings.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-cache-${{ runner.os }}-

      - name: Download Dependencies
        run: ./gradlew build --scan --continue

      - name: Run Lint
        run: ./gradlew lint

      - name: Run Tests
        run: ./gradlew test

      - name: Decode and Save Signing Key
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          mkdir -p $HOME/.android
          echo "$SIGNING_KEY" > keystore-base64.txt
          base64 --decode keystore-base64.txt > $HOME/.android/release.keystore
          ls -la $HOME/.android
          ls -la $HOME/.android/release.keystore

      - name: Update Build Configuration for Signing
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "android {
            signingConfigs {
              release {
                keyAlias '${{ secrets.SIGNING_KEY_ALIAS }}'
                keyPassword '${{ secrets.SIGNING_KEY_PASSWORD }}'
                storeFile file('$HOME/.android/release.keystore')
                storePassword '${{ secrets.SIGNING_STORE_PASSWORD }}'
              }
            }
            buildTypes {
              release {
                signingConfig signingConfigs.release
              }
            }
          }" >> app/build.gradle

      - name: Assemble Release
        run: ./gradlew assembleRelease --stacktrace

      - name: Sign APK
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: ./gradlew assembleRelease --stacktrace

      - name: Verify Signature
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: jarsigner -verify app/build/outputs/apk/release/app-release-unsigned.apk

      - name: Zipalign APK
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: ${ANDROID_SDK_ROOT}/build-tools/30.0.3/zipalign -v 4 app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release.apk

      - name: Upload Release APK
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk
