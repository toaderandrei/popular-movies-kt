name: Master

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*.*.*'  # Triggers the workflow on version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      ANDROID_SDK_ROOT: /opt/android-sdk

    steps:
      - name: Checking out branch
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode Keystore
        env:
          SIGNING_KEY_BASE64: ${{ secrets.SIGNING_KEY_BASE64 }}
        run: |
          mkdir -p $HOME/.android
          chmod +x $HOME/.android
          echo "$SIGNING_KEY_BASE64" | base64 -d > $HOME/.android/release.keystore
          ls -la $HOME/.android

      - name: Build Release apk
        run: ./gradlew assembleRelease --stacktrace

      - name: Build Release bundle
        run: ./gradlew bundleRelease --stacktrace

      - name: Get release file aab path
        id: releaseAab
        run: echo "aabfile=$(find app/build/outputs/bundle/release/*.aab)" >> $GITHUB_ENV

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_ENV

      - name: Zip Files
        uses: papeloto/action-zip@v1
        with:
          files: ${{ env.aabfile }} ${{ env.apkfile }}
          dest: ${{ env.apkfile }}.zip

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: ${{ env.apkfile }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Release Version
        run: echo "RELEASE_VERSION=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # 1.14.0
        with:
          token: ${{ secrets.PAT_TOKEN }}
          tag: ${{ env.RELEASE_VERSION }}
          generateReleaseNotes: true

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.apkfile }}
          asset_name: $(basename ${{ env.apkfile }})
          asset_content_type: application/vnd.android.package-archive

      - name: Upload AAB to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.aabfile }}
          asset_name: $(basename ${{ env.aabfile }})
          asset_content_type: application/octet-stream

      - name: Update App Version
        run: ./gradlew -b scripts/update-release-version.gradle.kts updateVersion

      - name: Commit updated version
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add gradle/libs.versions.toml
          git commit -m "Bump app version after release [skip ci]"
          git push origin HEAD:${{ github.ref }}
