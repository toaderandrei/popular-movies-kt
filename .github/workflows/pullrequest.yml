name: Branches

on:
  pull_request:
    branches:
      - '**' # Run on all branches
  push:
    branches:
      - '**' # Run on all branches

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      ANDROID_SDK_ROOT: /opt/android-sdk
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Decode Keystore
        run: |
          mkdir -p $HOME/.android
          echo ${{secrets.SIGNING_KEY_BASE64}} > keystore-base64.txt
          base64 -d keystore-base64.txt > $HOME/.android/release.keystore
          ls -la $HOME/.android
          ls -la $HOME/.android/release.keystore

      - name: Verify Signing Key
        run: |
          keytool -list -v -keystore $HOME/.android/release.keystore -storepass $SIGNING_STORE_PASSWORD

      - name: Download Dependencies
        run: ./gradlew dependencies --stacktrace

      - name: Run Lint
        run: ./gradlew lint --stacktrace

      - name: Assemble Release
        run: ./gradlew assembleRelease --stacktrace

      - name: Verify APK Existence
        run: |
          echo "Listing contents of app/build/outputs/apk/release/"
          ls -la app/build/outputs/apk/release/

      - name: Sign APK
        run: |
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
              -keystore $HOME/.android/release.keystore \
              -storepass $SIGNING_STORE_PASSWORD \
              -keypass $SIGNING_KEY_PASSWORD \
              app/build/outputs/apk/release/app-release-unsigned.apk \
              $SIGNING_KEY_ALIAS
          else
            echo "app-release-unsigned.apk not found"
            exit 1
          fi

      - name: Verify Signature
        run: |
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            jarsigner -verify app/build/outputs/apk/release/app-release-unsigned.apk
          else
            echo "app-release-unsigned.apk not found"
            exit 1
          fi

      - name: Zipalign APK
        run: |
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            ${ANDROID_SDK_ROOT}/build-tools/30.0.3/zipalign -v 4 app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release-aligned.apk
          else
            echo "app-release-unsigned.apk not found"
            exit 1
          fi

      - name: Upload Release APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release-aligned.apk
          path: app/build/outputs/apk/release/app-release-aligned.apk

      - name: Bump Version Code and Commit
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          versionCode=$(grep versionCode app/build.gradle.kts | awk '{print $2}')
          newVersionCode=$((versionCode + 1))
          sed -i "s/versionCode $versionCode/versionCode $newVersionCode/" app/build.gradle.kts
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add app/build.gradle.kts
          git commit -m "Bump version code to $newVersionCode"
          git push
